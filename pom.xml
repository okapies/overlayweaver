<!--
  =================================
  Maven POM file for Overlay Weaver
  =================================

  Goals:
  package            Builds the target JAR file target/overlayweaver.jar.
  package -P jnlp    Generates a JNLP file and signs the JAR file. (requires Maven 3.0.3 or later)
  javadoc:javadoc    Generates Javadoc HTML files under target/site/apidocs/.
  clean              Deletes all JAR files, compiled class files and Javadoc files.
  assembly:assembly  Builds distribution packages.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.shudo</groupId>
  <artifactId>overlayweaver</artifactId>
  <version>0.10.4-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Overlay Weaver</name>
  <description>An overlay construction toolkit, which supports overlay algorithm designers in addition to application developers.</description>
  <url>http://overlayweaver.sourceforge.net/</url>
  <inceptionYear>2006</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <properties>
    <!-- set global properties for this build -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- executable jar -->
    <main.jar.name>overlayweaver</main.jar.name>
    <main.jar>${project.build.directory}/${main.jar.name}.jar</main.jar>
    <main.class>ow.tool.emulator.Main</main.class>

    <!-- for JNLP (Java Web Start) -->
    <jnlp.src.dir>${basedir}/src/jnlp</jnlp.src.dir>
    <target.jnlp.dir>${project.build.directory}/jnlp</target.jnlp.dir>
    <main.signed.jar>${target.jnlp.dir}/${main.jar.name}-signed.jar</main.signed.jar>
    <jnlp.codebase>http://www.shudo.net/owdemo/</jnlp.codebase>

    <!-- compile flags -->
    <javac.source>1.5</javac.source>
    <javac.target>1.5</javac.target>
    <javac.debug>true</javac.debug>
    <javac.showDeprecation>true</javac.showDeprecation>
    <javac.optimize>true</javac.optimize>
  </properties>

  <repositories>
    <repository>
      <id>oracleReleases</id>
      <name>Oracle Released Java Packages</name>
      <url>http://download.oracle.com/maven</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <dependencies>
    <!-- cli -->
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
    </dependency>

    <!-- je -->
    <dependency>
      <groupId>com.sleepycat</groupId>
      <artifactId>je</artifactId>
      <version>5.0.84</version>
    </dependency>

    <!-- xmlrpc -->
    <dependency>
      <groupId>org.apache.xmlrpc</groupId>
      <artifactId>xmlrpc-common</artifactId>
      <version>3.1.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlrpc</groupId>
      <artifactId>xmlrpc-server</artifactId>
      <version>3.1.3</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion> <!-- To prevent collision with other javax.servlet -->
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.ws.commons.util</groupId>
      <artifactId>ws-commons-util</artifactId>
      <version>1.0.2</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlrpc</groupId>
      <artifactId>xmlrpc-client</artifactId>
      <version>3.1.3</version>
      <scope>runtime</scope>
    </dependency>

    <!-- jetty -->
    <dependency>
      <groupId>org.eclipse.jetty.orbit</groupId>
      <artifactId>javax.servlet</artifactId>
      <version>3.0.0.v201112011016</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-continuation</artifactId>
      <version>9.0.4.v20130625</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-http</artifactId>
      <version>9.0.4.v20130625</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-io</artifactId>
      <version>9.0.4.v20130625</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-security</artifactId>
      <version>9.0.4.v20130625</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>9.0.4.v20130625</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>9.0.4.v20130625</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util</artifactId>
      <version>9.0.4.v20130625</version>
      <scope>runtime</scope>
    </dependency>

    <!-- upnp -->
    <dependency>
      <groupId>org.cybergarage.cyberlink</groupId>
      <artifactId>upnp-stack</artifactId>
      <version>2.0.0</version>
      <scope>system</scope>
      <optional>true</optional>
      <systemPath>${basedir}/lib/clink200.jar</systemPath>
    </dependency>
  </dependencies>

  <build>
    <directory>${basedir}/target</directory>
    <finalName>${project.artifactId}-${project.version}</finalName>

    <plugins>
      <!--
        TODO: This settings should be removed by making this project compatible with
        Maven's standard directory layout as below:
        
        * src/ow        => src/main/java/ow
        * src/resources => src/main/resources
        * test/ow       => src/test/java/ow
      -->
      <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.8</version>
          <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src</source>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>add-resource</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>add-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>src/resources</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>add-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>test</source>
                  </sources>
                </configuration>
              </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>${javac.source}</source>
          <target>${javac.target}</target>
          <debug>${javac.debug}</debug>
          <showDeprecation>${javac.showDeprecation}</showDeprecation>
          <optimize>${javac.optimize}</optimize>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <configuration>
          <show>private</show>
          <header>${project.name}</header>
          <dependencySourceIncludes>
            <dependencySourceInclude>com.sleepycat:je</dependencySourceInclude>
          </dependencySourceIncludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <!--
            Builds executable jar including commons-cli.
          -->
          <execution>
            <id>executable-jar-with-cli</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <finalName>${main.jar.name}</finalName>
              <artifactSet>
                <includes>
                  <include>commons-cli:commons-cli</include>
                </includes>
              </artifactSet>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>${main.class}</Main-Class>
                  </manifestEntries>
                </transformer>
              </transformers>
              <createDependencyReducedPom>false</createDependencyReducedPom>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/src.xml</descriptor>
            <descriptor>src/main/assembly/bin.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <outputDirectory>${basedir}/target/site</outputDirectory>
    <plugins></plugins>
  </reporting>

  <profiles>
    <profile>
      <id>jnlp</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <!--
                Signs executable jar built by maven-shade-plugin. If you get a failure, you
                should use Maven 3.0.3 or later to handle the order of <execution> correctly.
              -->
              <execution>
                <id>sign-executable-jar</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <condition property="main.jar.built">
                      <available file="${main.jar}" />
                    </condition>
                    <fail unless="main.jar.built"
                          message="${main.jar} doesn't exist. You should use Maven 3.0.3 or later."/>
                    <copy todir="${target.jnlp.dir}" overwrite="true">
                      <fileset dir="${jnlp.src.dir}">
                        <include name="*.jnlp"/>
                        <include name="*.html"/>
                        <include name=".htaccess"/>
                        <include name="*Scenario"/>
                      </fileset>
                    </copy>
                    <replace dir="${target.jnlp.dir}" summary="yes">
                      <include name="**/*.jnlp"/>
                      <include name="**/*.html"/>
                      <replacefilter token="@@jnlp.codebase@@" value="${jnlp.codebase}"/>
                    </replace>
                    <signjar jar="${main.jar}" alias="myalias"
                      storepass="storepass" keypass="keypass"
                      keystore="${jnlp.src.dir}/mykeystore.jks" storetype="jks"
                      signedjar="${main.signed.jar}"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
